// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace NihFix.Valetudo.HttpClient.Api.V2.System.Runtime.Info
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class InfoGetResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The argv property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Argv { get; set; }
#nullable restore
#else
        public List<string> Argv { get; set; }
#endif
        /// <summary>The env property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::NihFix.Valetudo.HttpClient.Api.V2.System.Runtime.Info.InfoGetResponse_env? Env { get; set; }
#nullable restore
#else
        public global::NihFix.Valetudo.HttpClient.Api.V2.System.Runtime.Info.InfoGetResponse_env Env { get; set; }
#endif
        /// <summary>The execArgv property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExecArgv { get; set; }
#nullable restore
#else
        public List<string> ExecArgv { get; set; }
#endif
        /// <summary>The execPath property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExecPath { get; set; }
#nullable restore
#else
        public string ExecPath { get; set; }
#endif
        /// <summary>GID of the running Valetudo process</summary>
        public double? Gid { get; set; }
        /// <summary>PID of the running Valetudo process</summary>
        public double? Pid { get; set; }
        /// <summary>UID of the running Valetudo process</summary>
        public double? Uid { get; set; }
        /// <summary>The uptime of the currently running Valetudo process in seconds</summary>
        public double? Uptime { get; set; }
        /// <summary>The versions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::NihFix.Valetudo.HttpClient.Api.V2.System.Runtime.Info.InfoGetResponse_versions? Versions { get; set; }
#nullable restore
#else
        public global::NihFix.Valetudo.HttpClient.Api.V2.System.Runtime.Info.InfoGetResponse_versions Versions { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::NihFix.Valetudo.HttpClient.Api.V2.System.Runtime.Info.InfoGetResponse"/> and sets the default values.
        /// </summary>
        public InfoGetResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::NihFix.Valetudo.HttpClient.Api.V2.System.Runtime.Info.InfoGetResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::NihFix.Valetudo.HttpClient.Api.V2.System.Runtime.Info.InfoGetResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::NihFix.Valetudo.HttpClient.Api.V2.System.Runtime.Info.InfoGetResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "argv", n => { Argv = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "env", n => { Env = n.GetObjectValue<global::NihFix.Valetudo.HttpClient.Api.V2.System.Runtime.Info.InfoGetResponse_env>(global::NihFix.Valetudo.HttpClient.Api.V2.System.Runtime.Info.InfoGetResponse_env.CreateFromDiscriminatorValue); } },
                { "execArgv", n => { ExecArgv = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "execPath", n => { ExecPath = n.GetStringValue(); } },
                { "gid", n => { Gid = n.GetDoubleValue(); } },
                { "pid", n => { Pid = n.GetDoubleValue(); } },
                { "uid", n => { Uid = n.GetDoubleValue(); } },
                { "uptime", n => { Uptime = n.GetDoubleValue(); } },
                { "versions", n => { Versions = n.GetObjectValue<global::NihFix.Valetudo.HttpClient.Api.V2.System.Runtime.Info.InfoGetResponse_versions>(global::NihFix.Valetudo.HttpClient.Api.V2.System.Runtime.Info.InfoGetResponse_versions.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("argv", Argv);
            writer.WriteObjectValue<global::NihFix.Valetudo.HttpClient.Api.V2.System.Runtime.Info.InfoGetResponse_env>("env", Env);
            writer.WriteCollectionOfPrimitiveValues<string>("execArgv", ExecArgv);
            writer.WriteStringValue("execPath", ExecPath);
            writer.WriteDoubleValue("gid", Gid);
            writer.WriteDoubleValue("pid", Pid);
            writer.WriteDoubleValue("uid", Uid);
            writer.WriteDoubleValue("uptime", Uptime);
            writer.WriteObjectValue<global::NihFix.Valetudo.HttpClient.Api.V2.System.Runtime.Info.InfoGetResponse_versions>("versions", Versions);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
