// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace NihFix.Valetudo.HttpClient.Api.V2.System.Host.Info
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class InfoGetResponse_mem : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The amount of free memory of the host (free + buffers + caches) in bytes</summary>
        public double? Free { get; set; }
        /// <summary>The total amount of memory of the host in bytes</summary>
        public double? Total { get; set; }
        /// <summary>The current Valetudo RSS in bytes</summary>
        public double? ValetudoCurrent { get; set; }
        /// <summary>The maximum observed RSS of the running Valetudo instances in bytes</summary>
        public double? ValetudoMax { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::NihFix.Valetudo.HttpClient.Api.V2.System.Host.Info.InfoGetResponse_mem"/> and sets the default values.
        /// </summary>
        public InfoGetResponse_mem()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::NihFix.Valetudo.HttpClient.Api.V2.System.Host.Info.InfoGetResponse_mem"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::NihFix.Valetudo.HttpClient.Api.V2.System.Host.Info.InfoGetResponse_mem CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::NihFix.Valetudo.HttpClient.Api.V2.System.Host.Info.InfoGetResponse_mem();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "free", n => { Free = n.GetDoubleValue(); } },
                { "total", n => { Total = n.GetDoubleValue(); } },
                { "valetudo_current", n => { ValetudoCurrent = n.GetDoubleValue(); } },
                { "valetudo_max", n => { ValetudoMax = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("free", Free);
            writer.WriteDoubleValue("total", Total);
            writer.WriteDoubleValue("valetudo_current", ValetudoCurrent);
            writer.WriteDoubleValue("valetudo_max", ValetudoMax);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
