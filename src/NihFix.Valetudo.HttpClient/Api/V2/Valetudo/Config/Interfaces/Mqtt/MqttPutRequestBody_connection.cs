// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace NihFix.Valetudo.HttpClient.Api.V2.Valetudo.Config.Interfaces.Mqtt
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class MqttPutRequestBody_connection : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The authentication property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::NihFix.Valetudo.HttpClient.Api.V2.Valetudo.Config.Interfaces.Mqtt.MqttPutRequestBody_connection_authentication? Authentication { get; set; }
#nullable restore
#else
        public global::NihFix.Valetudo.HttpClient.Api.V2.Valetudo.Config.Interfaces.Mqtt.MqttPutRequestBody_connection_authentication Authentication { get; set; }
#endif
        /// <summary>The host property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Host { get; set; }
#nullable restore
#else
        public string Host { get; set; }
#endif
        /// <summary>The port property</summary>
        public int? Port { get; set; }
        /// <summary>The tls property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::NihFix.Valetudo.HttpClient.Api.V2.Valetudo.Config.Interfaces.Mqtt.MqttPutRequestBody_connection_tls? Tls { get; set; }
#nullable restore
#else
        public global::NihFix.Valetudo.HttpClient.Api.V2.Valetudo.Config.Interfaces.Mqtt.MqttPutRequestBody_connection_tls Tls { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::NihFix.Valetudo.HttpClient.Api.V2.Valetudo.Config.Interfaces.Mqtt.MqttPutRequestBody_connection"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::NihFix.Valetudo.HttpClient.Api.V2.Valetudo.Config.Interfaces.Mqtt.MqttPutRequestBody_connection CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::NihFix.Valetudo.HttpClient.Api.V2.Valetudo.Config.Interfaces.Mqtt.MqttPutRequestBody_connection();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "authentication", n => { Authentication = n.GetObjectValue<global::NihFix.Valetudo.HttpClient.Api.V2.Valetudo.Config.Interfaces.Mqtt.MqttPutRequestBody_connection_authentication>(global::NihFix.Valetudo.HttpClient.Api.V2.Valetudo.Config.Interfaces.Mqtt.MqttPutRequestBody_connection_authentication.CreateFromDiscriminatorValue); } },
                { "host", n => { Host = n.GetStringValue(); } },
                { "port", n => { Port = n.GetIntValue(); } },
                { "tls", n => { Tls = n.GetObjectValue<global::NihFix.Valetudo.HttpClient.Api.V2.Valetudo.Config.Interfaces.Mqtt.MqttPutRequestBody_connection_tls>(global::NihFix.Valetudo.HttpClient.Api.V2.Valetudo.Config.Interfaces.Mqtt.MqttPutRequestBody_connection_tls.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::NihFix.Valetudo.HttpClient.Api.V2.Valetudo.Config.Interfaces.Mqtt.MqttPutRequestBody_connection_authentication>("authentication", Authentication);
            writer.WriteStringValue("host", Host);
            writer.WriteIntValue("port", Port);
            writer.WriteObjectValue<global::NihFix.Valetudo.HttpClient.Api.V2.Valetudo.Config.Interfaces.Mqtt.MqttPutRequestBody_connection_tls>("tls", Tls);
        }
    }
}
#pragma warning restore CS0618
