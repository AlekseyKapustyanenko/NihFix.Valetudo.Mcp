// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using NihFix.Valetudo.HttpClient.Api.V2.Events;
using NihFix.Valetudo.HttpClient.Api.V2.Mqtt;
using NihFix.Valetudo.HttpClient.Api.V2.Networkadvertisement;
using NihFix.Valetudo.HttpClient.Api.V2.Ntpclient;
using NihFix.Valetudo.HttpClient.Api.V2.Robot;
using NihFix.Valetudo.HttpClient.Api.V2.System;
using NihFix.Valetudo.HttpClient.Api.V2.Timers;
using NihFix.Valetudo.HttpClient.Api.V2.Updater;
using NihFix.Valetudo.HttpClient.Api.V2.Valetudo;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace NihFix.Valetudo.HttpClient.Api.V2
{
    /// <summary>
    /// Builds and executes requests for operations under \api\v2
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class V2RequestBuilder : BaseRequestBuilder
    {
        /// <summary>The events property</summary>
        public global::NihFix.Valetudo.HttpClient.Api.V2.Events.EventsRequestBuilder Events
        {
            get => new global::NihFix.Valetudo.HttpClient.Api.V2.Events.EventsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The mqtt property</summary>
        public global::NihFix.Valetudo.HttpClient.Api.V2.Mqtt.MqttRequestBuilder Mqtt
        {
            get => new global::NihFix.Valetudo.HttpClient.Api.V2.Mqtt.MqttRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The networkadvertisement property</summary>
        public global::NihFix.Valetudo.HttpClient.Api.V2.Networkadvertisement.NetworkadvertisementRequestBuilder Networkadvertisement
        {
            get => new global::NihFix.Valetudo.HttpClient.Api.V2.Networkadvertisement.NetworkadvertisementRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The ntpclient property</summary>
        public global::NihFix.Valetudo.HttpClient.Api.V2.Ntpclient.NtpclientRequestBuilder Ntpclient
        {
            get => new global::NihFix.Valetudo.HttpClient.Api.V2.Ntpclient.NtpclientRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The robot property</summary>
        public global::NihFix.Valetudo.HttpClient.Api.V2.Robot.RobotRequestBuilder Robot
        {
            get => new global::NihFix.Valetudo.HttpClient.Api.V2.Robot.RobotRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The system property</summary>
        public global::NihFix.Valetudo.HttpClient.Api.V2.System.SystemRequestBuilder System
        {
            get => new global::NihFix.Valetudo.HttpClient.Api.V2.System.SystemRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The timers property</summary>
        public global::NihFix.Valetudo.HttpClient.Api.V2.Timers.TimersRequestBuilder Timers
        {
            get => new global::NihFix.Valetudo.HttpClient.Api.V2.Timers.TimersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The updater property</summary>
        public global::NihFix.Valetudo.HttpClient.Api.V2.Updater.UpdaterRequestBuilder Updater
        {
            get => new global::NihFix.Valetudo.HttpClient.Api.V2.Updater.UpdaterRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The valetudo property</summary>
        public global::NihFix.Valetudo.HttpClient.Api.V2.Valetudo.ValetudoRequestBuilder Valetudo
        {
            get => new global::NihFix.Valetudo.HttpClient.Api.V2.Valetudo.ValetudoRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::NihFix.Valetudo.HttpClient.Api.V2.V2RequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public V2RequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/v2", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::NihFix.Valetudo.HttpClient.Api.V2.V2RequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public V2RequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/v2", rawUrl)
        {
        }
        /// <summary>
        /// List available API endpoints
        /// </summary>
        /// <returns>A <see cref="global::NihFix.Valetudo.HttpClient.Api.V2.V2GetResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::NihFix.Valetudo.HttpClient.Api.V2.V2GetResponse?> GetAsV2GetResponseAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::NihFix.Valetudo.HttpClient.Api.V2.V2GetResponse> GetAsV2GetResponseAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::NihFix.Valetudo.HttpClient.Api.V2.V2GetResponse>(requestInfo, global::NihFix.Valetudo.HttpClient.Api.V2.V2GetResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// List available API endpoints
        /// </summary>
        /// <returns>A <see cref="global::NihFix.Valetudo.HttpClient.Api.V2.V2Response"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        [Obsolete("This method is obsolete. Use GetAsV2GetResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::NihFix.Valetudo.HttpClient.Api.V2.V2Response?> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::NihFix.Valetudo.HttpClient.Api.V2.V2Response> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::NihFix.Valetudo.HttpClient.Api.V2.V2Response>(requestInfo, global::NihFix.Valetudo.HttpClient.Api.V2.V2Response.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// List available API endpoints
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::NihFix.Valetudo.HttpClient.Api.V2.V2RequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::NihFix.Valetudo.HttpClient.Api.V2.V2RequestBuilder WithUrl(string rawUrl)
        {
            return new global::NihFix.Valetudo.HttpClient.Api.V2.V2RequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class V2RequestBuilderGetRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
